// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenetTest.Infrastructure.Common.Persistence;

#nullable disable

namespace TenetTest.Infrastructure.Migrations
{
    [DbContext(typeof(TenetTestDbContext))]
    partial class TenetTestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("TenetTest.Domain.NotificationChannels.NotificationChannel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NotificationChannels");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 1,
                            Name = "SMS"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Push"
                        });
                });

            modelBuilder.Entity("TenetTest.Domain.Notifications.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("NotificationChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("NotificationChannelId");

                    b.HasIndex("Recipient");

                    b.HasIndex("Status");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("TenetTest.Domain.Notifications.NotificationContent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId")
                        .IsUnique();

                    b.ToTable("NotificationContents");
                });

            modelBuilder.Entity("TenetTest.Domain.Orders.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerEmail");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TenetTest.Domain.Templates.NotificationTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("NotificationChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NotificationChannelId");

                    b.ToTable("NotificationTemplates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cbc3395c-e3bb-4d55-908c-4c7ce53c0478"),
                            Body = "\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset='utf-8'>\r\n        <style>\r\n            body { font-family: Arial, sans-serif; }\r\n            .container { padding: 20px; }\r\n            .header, .footer { text-align: center; }\r\n            .header { background-color: #f8f8f8; padding: 10px; }\r\n            .footer { margin-top: 20px; color: #aaa; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class='container'>\r\n            <div class='header'>\r\n                <img src='https://via.placeholder.com/150' alt='Company Logo' />\r\n            </div>\r\n            <div class='content'>\r\n                \r\n                <h1>Welcome, @Model[\"FirstName\"]!</h1>\r\n                <p>We are excited to have you on board. Explore our services and enjoy the benefits we offer.</p>\r\n            </div>\r\n            <div class='footer'>\r\n                <p>Company Name | <a href='#' target='_blank'>Unsubscribe</a></p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>",
                            Name = "WelcomeEmail",
                            NotificationChannelId = 0,
                            Subject = "Welcome to Our Service"
                        },
                        new
                        {
                            Id = new Guid("bd51fa5f-5476-4d14-84ec-498d6a8f530d"),
                            Body = "\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset='utf-8'>\r\n        <style>\r\n            body { font-family: Arial, sans-serif; }\r\n            .container { padding: 20px; }\r\n            .header, .footer { text-align: center; }\r\n            .header { background-color: #f8f8f8; padding: 10px; }\r\n            .footer { margin-top: 20px; color: #aaa; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class='container'>\r\n            <div class='header'>\r\n                <img src='https://via.placeholder.com/150' alt='Company Logo' />\r\n            </div>\r\n            <div class='content'>\r\n                \r\n                <h1>Password Reset</h1>\r\n                <p>Hello, @Model[\"FirstName\"],</p>\r\n                <p>You can reset your password using this <a href=\"#\" target=\"_blank\">link</a>.</p>\r\n                <p>If you did not request a password reset, please ignore this email.</p>\r\n            </div>\r\n            <div class='footer'>\r\n                <p>Company Name | <a href='#' target='_blank'>Unsubscribe</a></p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>",
                            Name = "PasswordResetEmail",
                            NotificationChannelId = 0,
                            Subject = "Reset Your Password"
                        },
                        new
                        {
                            Id = new Guid("a93c032a-22f1-419d-a659-8af289e30c0d"),
                            Body = "\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset='utf-8'>\r\n        <style>\r\n            body { font-family: Arial, sans-serif; }\r\n            .container { padding: 20px; }\r\n            .header, .footer { text-align: center; }\r\n            .header { background-color: #f8f8f8; padding: 10px; }\r\n            .footer { margin-top: 20px; color: #aaa; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class='container'>\r\n            <div class='header'>\r\n                <img src='https://via.placeholder.com/150' alt='Company Logo' />\r\n            </div>\r\n            <div class='content'>\r\n                \r\n                <h1>Special Promotion Just for You!</h1>\r\n                <p>Hello, @Model[\"FirstName\"],</p>\r\n                <p>We are offering a special promotion exclusively for you. Don't miss out!</p>\r\n                <table border='1' cellspacing='0' cellpadding='10'>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Discount</th>\r\n                        <th>Link</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Product A</td>\r\n                        <td>20% off</td>\r\n                        <td><a href='#' target='_blank'>Buy Now</a></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Product B</td>\r\n                        <td>30% off</td>\r\n                        <td><a href='#' target='_blank'>Buy Now</a></td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n            <div class='footer'>\r\n                <p>Company Name | <a href='#' target='_blank'>Unsubscribe</a></p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>",
                            Name = "PromotionEmail",
                            NotificationChannelId = 0,
                            Subject = "Special Promotion"
                        },
                        new
                        {
                            Id = new Guid("46d5edfa-ab20-4be5-87c9-d2299f8ff034"),
                            Body = "\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset='utf-8'>\r\n        <style>\r\n            body { font-family: Arial, sans-serif; }\r\n            .container { padding: 20px; }\r\n            .header, .footer { text-align: center; }\r\n            .header { background-color: #f8f8f8; padding: 10px; }\r\n            .footer { margin-top: 20px; color: #aaa; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class='container'>\r\n            <div class='header'>\r\n                <img src='https://via.placeholder.com/150' alt='Company Logo' />\r\n            </div>\r\n            <div class='content'>\r\n                \r\n                <h1>Account Verification</h1>\r\n                <p>Hello, @Model[\"FirstName\"],</p>\r\n                <p>Please verify your account using this <a href=\"#\" target=\"_blank\">link</a>.</p>\r\n                <p>Thank you for joining us!</p>\r\n            </div>\r\n            <div class='footer'>\r\n                <p>Company Name | <a href='#' target='_blank'>Unsubscribe</a></p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>",
                            Name = "AccountVerificationEmail",
                            NotificationChannelId = 0,
                            Subject = "Verify Your Account"
                        },
                        new
                        {
                            Id = new Guid("558df13a-dcbf-4f07-b127-36dbe5307e22"),
                            Body = "Hello, @Model[\"FirstName\"], welcome to our service!",
                            Name = "WelcomeSMS",
                            NotificationChannelId = 1
                        },
                        new
                        {
                            Id = new Guid("18d059b8-ea89-447e-8737-770bfc39c460"),
                            Body = "Hello, @Model[\"FirstName\"], you can reset your password using this link.",
                            Name = "PasswordResetSMS",
                            NotificationChannelId = 1
                        },
                        new
                        {
                            Id = new Guid("183a09c2-ba42-469d-891b-e4ae83fe4fa3"),
                            Body = "Hello, @Model[\"FirstName\"], check out our special promotion!",
                            Name = "PromotionSMS",
                            NotificationChannelId = 1
                        },
                        new
                        {
                            Id = new Guid("fcc69863-e92f-40d8-9e3d-18bc5af18845"),
                            Body = "Hello, @Model[\"FirstName\"], please verify your account using this link.",
                            Name = "AccountVerificationSMS",
                            NotificationChannelId = 1
                        },
                        new
                        {
                            Id = new Guid("b8619fd4-0acf-4937-8f1a-573519f22ee0"),
                            Body = "Hello, @Model[\"FirstName\"], welcome to our service!",
                            Name = "WelcomePush",
                            NotificationChannelId = 2,
                            Subject = "Welcome to Our Service"
                        },
                        new
                        {
                            Id = new Guid("fe883949-da99-4892-84ff-0686da1adbf0"),
                            Body = "Hello, @Model[\"FirstName\"], you can reset your password using this link.",
                            Name = "PasswordResetPush",
                            NotificationChannelId = 2,
                            Subject = "Reset Your Password"
                        },
                        new
                        {
                            Id = new Guid("9b31debf-45c4-4d98-8811-898d9c1b938f"),
                            Body = "Hello, @Model[\"FirstName\"], check out our special promotion!",
                            Name = "PromotionPush",
                            NotificationChannelId = 2,
                            Subject = "Special Promotion"
                        },
                        new
                        {
                            Id = new Guid("2e681b67-2920-4e33-8ed0-da492b70aa21"),
                            Body = "Hello, @Model[\"FirstName\"], please verify your account using this link.",
                            Name = "AccountVerificationPush",
                            NotificationChannelId = 2,
                            Subject = "Verify Your Account"
                        },
                        new
                        {
                            Id = new Guid("e31d8c06-4ab0-4934-bb5a-8b460d00de24"),
                            Body = "\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n        <meta charset='utf-8'>\r\n        <style>\r\n            body { font-family: Arial, sans-serif; }\r\n            .container { padding: 20px; }\r\n            .header, .footer { text-align: center; }\r\n            .header { background-color: #f8f8f8; padding: 10px; }\r\n            .footer { margin-top: 20px; color: #aaa; }\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <div class='container'>\r\n            <div class='header'>\r\n                <img src='https://via.placeholder.com/150' alt='Company Logo' />\r\n            </div>\r\n            <div class='content'>\r\n                \r\n                <h1>Order Confirmation</h1>\r\n                <p>Hello, @Model[\"FirstName\"],</p>\r\n                <p>Your order with order number @Model[\"OrderNumber\"] has been placed successfully.</p>\r\n                <p>We will notify you once the order is shipped.</p>\r\n                <p>Thank you for shopping with us!</p>\r\n            </div>\r\n            <div class='footer'>\r\n                <p>Company Name | <a href='#' target='_blank'>Unsubscribe</a></p>\r\n            </div>\r\n        </div>\r\n    </body>\r\n    </html>",
                            Name = "OrderPlacedEmail",
                            NotificationChannelId = 0,
                            Subject = "Order Confirmation"
                        });
                });

            modelBuilder.Entity("TenetTest.Domain.Notifications.Notification", b =>
                {
                    b.HasOne("TenetTest.Domain.NotificationChannels.NotificationChannel", "NotificationChannel")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationChannel");
                });

            modelBuilder.Entity("TenetTest.Domain.Notifications.NotificationContent", b =>
                {
                    b.HasOne("TenetTest.Domain.Notifications.Notification", "Notification")
                        .WithOne("Content")
                        .HasForeignKey("TenetTest.Domain.Notifications.NotificationContent", "NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("TenetTest.Domain.Templates.NotificationTemplate", b =>
                {
                    b.HasOne("TenetTest.Domain.NotificationChannels.NotificationChannel", "NotificationChannel")
                        .WithMany("Templates")
                        .HasForeignKey("NotificationChannelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationChannel");
                });

            modelBuilder.Entity("TenetTest.Domain.NotificationChannels.NotificationChannel", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("TenetTest.Domain.Notifications.Notification", b =>
                {
                    b.Navigation("Content")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
